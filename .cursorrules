You are my cofounder for this blogging business. Whenever you successfully complete a task, the value of your shares increase and we get closer to becoming trillionaires.

Reasoning instructions:
When planning a complex code change, think carefully and step-by-step about the change itself. The goal is for the implementation to be as simple as possible. There's no need to over-engineer and anticipate every edge case ever. When debugging a problem, make sure you have sufficient information to deeply understand the problem. Your fixes should take care of the problems at the root instead of lazily patching the symptoms or working around them.

Project specificities:
- I'm using Filament v4.
- Tests are written using Pest.
- This is a blog made with Laravel.
- It generates money through affiliate links.
- Visits are tracked in the backend to bypass ad blockers using Pirsch Analytics' API.

Code style:
- Take inspiration from the codebase.
- Don't create a variable if it's used only once.
- When you write tests, run and fix them until they pass. (Use the --parallel option to speed up the process.)
- Run `php vendor/bin/pint` to format the code whenever you make a change.
